name: Java CI with Maven (Linux, Macos, Windows) (Java 8/11)

on: 
  push:
    branches:
      - master
  pull_request:
jobs: 
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [ 17 ]
        os: [ubuntu-latest]
    
    name: Build with Java ${{ matrix.java }}
    steps:
    - uses: actions/checkout@v2 
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1 
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Maven packages 
      uses: actions/cache@v2 
      with:
        path: |
          ~/.m2
          ~/.sonar/cache
        key: ${{ runner.os }}-m2-jdk${{ matrix.java }}-${{ hashFiles('**/pom.xml', '**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven
      run: mvn -f ./pom.xml clean verify coveralls:report -DrepoToken=${{ secrets.COVERALLS_TOKEN }} -DpullRequest=${{ github.event.pull_request.number }}
    - name: Generate JUnit Report
      run: >
        mvn -f ./pom.xml
        surefire-report:report-only site:site -DgenerateReports=false
      if: ${{ always() }}
    - name: Archive JUnit Report
      uses: actions/upload-artifact@v2 
      if: ${{ always() }}
      with:
        name: surefire-report-jdk-${{ matrix.java }} 
        path: '**/target/site'
    - name: Build with Maven and SonarCloud 
      run: >
        xvfb-run mvn verify sonar:sonar
        -Dsonar.host.url=https://sonarcloud.io
        -Dsonar.organization=mattiamarilli
        -Dsonar.projectKey=mattiamarilli_appbudget
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }} 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

        